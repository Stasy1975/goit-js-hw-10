{"mappings":"AAMA,MAEMA,EAAO,CACXC,gBAAiBC,SAASC,cAAc,iBACxCC,cAAeF,SAASC,cAAc,iBACtCE,eAAgBH,SAASC,cAAc,gBAKnCG,EAA2BC,IAC/B,GAAIA,EAAaC,OAAS,GACxB,OAAOC,QAAQC,OAAO,YAGxB,GAAIH,EAAaC,OAAS,EACxB,MAAO,CACLG,KAAM,OACNC,OAAQL,EACLM,KACCC,GACE,sBAAsBA,EAAQC,MAAMC,qBAAqBF,EAAQG,KAAKC,kBAEzEC,KAAK,KAGZ,GAA4B,IAAxBZ,EAAaC,OAAc,CAC7B,MAAMM,EAAUP,EAAa,GAC7B,MAAO,CACLI,KAAM,UACNC,OAAQ,4BACWE,EAAQC,MAAMC,qBAC/BF,EAAQG,KAAKC,kCAEHJ,EAAQM,mCACLN,EAAQO,qCACTC,OAAOC,OAAOT,EAAQU,8BAMpCC,EAAc,KAClBzB,EAAKI,cAAcsB,UAAY,GAC/B1B,EAAKC,gBAAgByB,UAAY,IAG7BC,EAAkBC,IACtBH,IAEgC,SAA5BG,EAAmBjB,KACrBX,EAAKC,gBAAgB4B,mBACnB,YACAD,EAAmBhB,QAEgB,YAA5BgB,EAAmBjB,MAC5BX,EAAKI,cAAcyB,mBACjB,YACAD,EAAmBhB,SAenBkB,EAAgBC,GACN,cAAVA,GALJN,SACAO,OAAOC,QAAQ,6CAQD,aAAVF,GAdJN,SACAO,OAAOE,KAAK,oEAiBZC,QAAQC,IAAIL,GAiBd/B,EAAKK,eAAegC,iBAClB,QACAC,UAhBeC,IACf,MAAMC,EA9Ee,CAAAD,GAAKA,EAAEE,OAAOC,MAAMC,OAAOC,cA8ExBC,CAAeN,GAEf,KAApBC,EAKJM,eAAeN,GACZO,KAAKzC,GACLyC,KAAKpB,GACLqB,MAAMlB,GAPPL,MAzFmB","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import debounce from 'lodash.debounce';\n\n// import { fetchCountries } from './fetchCountries';\n\nconst DEBOUNCE_DELAY = 300;\n\nconst refs = {\n  countriesListEl: document.querySelector('.country-list'),\n  countryInfoEl: document.querySelector('.country-info'),\n  countryInputEl: document.querySelector('#search-box'),\n};\n\nconst getCountryName = e => e.target.value.trim().toLowerCase();\n\nconst renderSearchResultMarkup = countriesArr => {\n  if (countriesArr.length > 10) {\n    return Promise.reject('too many');\n  }\n\n  if (countriesArr.length > 1) {\n    return {\n      type: 'list',\n      markup: countriesArr\n        .map(\n          country =>\n            `<li><span><img src=${country.flags.svg} alt=\"\"></span>${country.name.official}</li>`\n        )\n        .join(''),\n    };\n  }\n  if (countriesArr.length === 1) {\n    const country = countriesArr[0];\n    return {\n      type: 'details',\n      markup: `\n    <h2><span><img src=${country.flags.svg} alt=\"\"></span>${\n        country.name.official\n      }</h2>\n    <p>Capital: ${country.capital}</p>\n    <p>Population: ${country.population}</p>\n    <p>Languages: ${Object.values(country.languages)}</p>    \n    `,\n    };\n  }\n};\n\nconst clearResult = () => {\n  refs.countryInfoEl.innerHTML = '';\n  refs.countriesListEl.innerHTML = '';\n};\n\nconst addSearchResult = searchResultMarkup => {\n  clearResult();\n\n  if (searchResultMarkup.type === 'list') {\n    refs.countriesListEl.insertAdjacentHTML(\n      'beforeend',\n      searchResultMarkup.markup\n    );\n  } else if (searchResultMarkup.type === 'details') {\n    refs.countryInfoEl.insertAdjacentHTML(\n      'beforeend',\n      searchResultMarkup.markup\n    );\n  }\n};\n\nconst alarmToManyCountries = () => {\n  clearResult();\n  Notify.info('Too many matches found. Please enter a more specific name.');\n};\n\nconst alarmNotFound = () => {\n  clearResult();\n  Notify.failure('Oops, there is no country with that name');\n};\n\nconst errorsHandler = error => {\n  if (error === 'not found') {\n    alarmNotFound();\n    return;\n  }\n  if (error === 'too many') {\n    alarmToManyCountries();\n    return;\n  }\n  console.log(error);\n};\n\nconst doSearch = e => {\n  const searchedCountry = getCountryName(e);\n\n  if (searchedCountry === '') {\n    clearResult();\n    return;\n  }\n\n  fetchCountries(searchedCountry)\n    .then(renderSearchResultMarkup)\n    .then(addSearchResult)\n    .catch(errorsHandler);\n};\n\nrefs.countryInputEl.addEventListener(\n  'input',\n  debounce(doSearch, DEBOUNCE_DELAY)\n);\n"],"names":["$1f0dc3b9307be026$var$refs","countriesListEl","document","querySelector","countryInfoEl","countryInputEl","$1f0dc3b9307be026$var$renderSearchResultMarkup","countriesArr","length","Promise","reject","type","markup","map","country","flags","svg","name","official","join","capital","population","Object","values","languages","$1f0dc3b9307be026$var$clearResult","innerHTML","$1f0dc3b9307be026$var$addSearchResult","searchResultMarkup","insertAdjacentHTML","$1f0dc3b9307be026$var$errorsHandler","error","Notify","failure","info","console","log","addEventListener","debounce","e","searchedCountry","target","value","trim","toLowerCase","$1f0dc3b9307be026$var$getCountryName","fetchCountries","then","catch"],"version":3,"file":"index.1bb95514.js.map"}